{"version":3,"file":"static/js/631.7299cc10.chunk.js","mappings":"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","sources":["component/core/CrossLink.js","component/core/RandomQuote.js","component/core/RandomMeme.js","component/core/Introdution.js","component/core/LazyImage.js","component/core/PopularPosts.js","component/core/TechStack.js","component/utils/SEO.js","component/utils/_FetchData.js","component/utils/_LazyLoad.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport useStore from '../../hook/useStore';\r\n\r\nconst StyledCrossLink = styled.a`\r\n    color: ${props => props.color || \"currentColor\"};\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n`;\r\n\r\nfunction CrossLink(props) {\r\n    const cursorEl = useStore(state => state.cursorRef);\r\n    const onMouseEnter = () => {\r\n        if (!cursorEl || !cursorEl.current) return;\r\n        cursorEl.current.setAttribute('hover', true);\r\n    };\r\n    const onMouseLeave = () => {\r\n        if (!cursorEl || !cursorEl.current) return;\r\n        cursorEl.current.removeAttribute('hover');\r\n    };\r\n    return (\r\n        <StyledCrossLink \r\n            onMouseEnter={onMouseEnter}\r\n            onMouseLeave={onMouseLeave}\r\n            className={props.className}\r\n            href={props.href}>\r\n            {props.children}\r\n        </StyledCrossLink>\r\n    );\r\n}\r\n\r\nexport default CrossLink;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useStore from \"../../hook/useStore\";\r\n\r\nconst StyledQuote = styled.div`\r\n    padding: 1rem;\r\n    width: 100%;\r\n    color: var(--background);\r\n    background-color: var(--text);\r\n    h1 {\r\n        font-family: var(--headerFont);\r\n        color: currentColor;\r\n        filter: brightness(0.7);\r\n    }\r\n    p {\r\n        font-family: var(--codeFont);\r\n        ::before {\r\n            content: '<';\r\n            color: var(--success);\r\n        }\r\n        ::after {\r\n            content: '/>';\r\n            color: var(--success);\r\n        }\r\n    }\r\n`;\r\n\r\nfunction RandomQuote(props) {\r\n    const [quote, setQuote] = React.useState('');\r\n    const [author, setAuthor] = React.useState('');\r\n    const cursorEl = useStore(state => state.cursorRef);\r\n    const onMouseEnter = () => {\r\n        if (!cursorEl?.current) return;\r\n        cursorEl.current.setAttribute('hover', true);\r\n    }\r\n    const onMouseLeave = () => {\r\n        if (!cursorEl?.current) return;\r\n        cursorEl.current.removeAttribute('hover');\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetch('https://programming-quotes-api.herokuapp.com/quotes/random')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setQuote(data.en);\r\n                setAuthor(data.author);\r\n            })\r\n            .catch(console.error);\r\n    }, []);\r\n    \r\n    return (\r\n        <StyledQuote \r\n            onMouseEnter={onMouseEnter}\r\n            onMouseLeave={onMouseLeave}\r\n            {...props}>\r\n            <h1>{author} :</h1>\r\n            <p>{quote}</p>\r\n        </StyledQuote>\r\n    );\r\n}\r\n\r\nexport default React.memo(RandomQuote);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport LazyImage from './LazyImage';\r\nimport IonIcon from './IonIcon';\r\n\r\nconst StyledRandomMeme = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 2px solid var(--text);\r\n`;\r\n\r\nconst StyledImage = styled(LazyImage)`\r\n    display: flex;\r\n    justify-content: center;\r\n    border-top: 2px solid var(--text);\r\n`;\r\n\r\nconst StyledRedirect = styled.a`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    background-color: var(--text);\r\n    font-size: 1.2rem;\r\n    padding: 0.5rem 1rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    color: var(--background);\r\n    span {\r\n        color: var(--ew);\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst StyledAuthor = styled.span`\r\n    margin: 0 auto;\r\n    border-top: 2px solid var(--text);\r\n    border-bottom: 2px solid var(--text);\r\n    padding: 0.2rem 0.5rem;\r\n    width: 100%;\r\n    a {\r\n        text-decoration: none;\r\n        color: var(--secondary);\r\n    }\r\n`;\r\n\r\nconst StyledTitle = styled.p`\r\n    padding: 0.2rem 0.5rem;\r\n`;\r\n\r\nconst sample = {\r\n    postLink: \"\",\r\n    subreddit: \"\",\r\n    title: \"\",\r\n    url: \"\",\r\n    author: \"\"\r\n}\r\nconst iconStyles = {\r\n    fontSize: '1.2em',\r\n    backgroundColor: 'var(--ew)',\r\n    color: 'var(--text)',\r\n    padding: '3px',\r\n    borderRadius: '50%',\r\n    marginLeft: '0.5rem'\r\n};\r\n\r\nfunction RandomMeme({ className }) {\r\n    const [meme, setMeme] = React.useState(sample);\r\n    React.useEffect(() => {\r\n        fetch(\"https://meme-api.herokuapp.com/gimme\")\r\n            .then(res => res.json())\r\n            .then(data => setMeme(data))\r\n            .catch(console.error);\r\n    }, []);\r\n\r\n    return (\r\n        <StyledRandomMeme>\r\n            <StyledTitle>{meme.title}</StyledTitle>\r\n            <StyledImage src={meme.url} alt=\"meme\" className={className} />\r\n            <StyledAuthor>{meme.author} at\r\n                <a href={`https://www.reddit.com/r/${meme.subreddit}`}> r/{meme.subreddit}</a>\r\n            </StyledAuthor>\r\n            <StyledRedirect href={meme.postLink}>\r\n                View on <span>Reddit<IonIcon icon='logo-reddit' {...iconStyles}/></span>\r\n            </StyledRedirect>\r\n        </StyledRandomMeme>\r\n    );\r\n}\r\n\r\nexport default RandomMeme;","import styled from 'styled-components';\r\nimport RandomQuote from './RandomQuote';\r\nimport RandomMeme from './RandomMeme';\r\nimport CrossLink from './CrossLink';\r\n\r\nconst StyledLink = styled(CrossLink)`\r\n    color: var(--secondary);\r\n`;\r\n\r\nconst StyledIntrodution = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    line-height: 1.3;\r\n    font-family: var(--textFont);\r\n    & > h1 {\r\n        font-size: 2rem;\r\n        text-align: center;\r\n    }\r\n    & > h2 {\r\n        font-size: 1.5rem;\r\n        margin-top: 1rem;\r\n        text-align: center;\r\n    }\r\n    & > ul {\r\n        position: relative;\r\n        padding: 1.5rem 1rem;\r\n        list-style: none;\r\n        width: 90%;\r\n        border: 2px solid var(--text);\r\n        & > h3 {\r\n            position: absolute;\r\n            top: 100%;\r\n            left: 50%;\r\n            padding: 0.5rem;\r\n            transform: translate(-50%, -50%);\r\n            text-align: center;\r\n            background-color: var(--background);\r\n        }\r\n        & > li {\r\n            text-indent: 1rem;\r\n        }\r\n    }\r\n\r\n    // mobile\r\n    @media (max-width: 768px) {\r\n        & > h1 {\r\n            font-size: 1.5rem;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Introdution(props) {\r\n    return (\r\n        <StyledIntrodution>\r\n            <h1>HELLO WORLD 🌏!<br />I'm Vu Tung Minh<br />(a.k.a thuongton999)</h1>\r\n            <RandomQuote />\r\n            <h2>Who am I?</h2>\r\n            <ul>\r\n                <li>📄 A web dev.</li>\r\n                <li>🎮 Working for a game startup with a MMORPG game product.</li>\r\n                <li>📚 Studying at Luong Van Chanh High School.</li>\r\n                <h3>IT'S ME</h3>\r\n            </ul>\r\n            <h2>#trytobefunny</h2>\r\n            <ul>\r\n                <li>I am also a member of\r\n                    <StyledLink href='https://fct-club.com/'> FCTC (FPT-Software Computer Talents Club)</StyledLink>.\r\n                    You can see my dumb face <StyledLink href='https://fct-club.com/2020-members/'>here</StyledLink>, my member code is 01.35.\r\n                </li>\r\n                <li><RandomMeme /></li>\r\n            </ul>\r\n            <h2>Sometimes we win, \r\n                sometimes we learn!</h2>\r\n            <ul>\r\n                <li>Second Prize 🥈 in\r\n                    <StyledLink href='https://codelearn.io/fights/detail/5064803'> FPT Techday 2020 Code Warrior.</StyledLink>\r\n                </li>\r\n                <li>Completed course\r\n                    <StyledLink href=\"https://www.coursera.org/account/accomplishments/verify/SFRZFNEQVMG6\"> Programming Language Part A</StyledLink> at Coursera\r\n                </li>\r\n                <li>...</li>\r\n            </ul>\r\n        </StyledIntrodution>\r\n    )\r\n}\r\n\r\nexport default Introdution;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport createObserver from '../utils/_LazyLoad';\r\n\r\nconst imgObserver = createObserver(entry => {\r\n    if (!entry.isIntersecting) return;\r\n    if (!entry.target.dataset.src) return;\r\n    const img = entry.target;\r\n    img.src = img.dataset.src;\r\n    img.removeAttribute('data-src');\r\n});\r\n\r\n// only 95 bytes\r\nconst placeHolderImage = 'https://upload.wikimedia.org/wikipedia/commons/c/ca/1x1.png';\r\nconst StyledImage = styled.img`\r\n    object-fit: cover;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nfunction LazyImage(props) {\r\n    const { src, className } = props;\r\n    const img = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        const imgDOM = img.current;\r\n        imgObserver.observe(imgDOM);\r\n        return () => imgObserver.unobserve(imgDOM);\r\n    }, [src]);\r\n    \r\n    return (\r\n        <div className={className}>\r\n            <StyledImage \r\n                ref={img}\r\n                src={placeHolderImage}\r\n                data-src={src}\r\n                alt=''/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LazyImage;","import styled from 'styled-components';\r\nimport LazyImage from './LazyImage';\r\nimport React from 'react';\r\nimport createObserver from '../utils/_LazyLoad';\r\nimport CrossLink from './CrossLink';\r\nimport { getPopularPosts } from '../utils/_FetchData';\r\nconst StyledPopularPosts = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    margin-top: 2rem;\r\n    padding: 0 2rem;\r\n    width: 100%;\r\n    & > h1 {\r\n        font-size: 2rem;\r\n        font-weight: bold;\r\n        font-family: var(--headerFont);\r\n    }\r\n`;\r\n\r\nconst StyledPosts = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n    width: 100%;\r\n\r\n    // mobile\r\n    @media (max-width: 376px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst StyledPostOverview = styled(CrossLink)`\r\n    font-family: var(--textFont);\r\n    // width = 50% - gap/2\r\n    width: calc(50% - 5px);\r\n\r\n    // mobile\r\n    @media (max-width: 376px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst StyledImage = styled(LazyImage)`\r\n    width: 100%;\r\n    aspect-ratio: 16 / 9;\r\n`;\r\n\r\nfunction PostOverview(props) {\r\n    const { title, url, image } = props;\r\n    // if image url not contain url host\r\n    // then add url host to image url\r\n    const host = url.split('/')[2];\r\n    let imageUrl = image;\r\n    if (!imageUrl.includes(host)) {\r\n        imageUrl = url.includes('https://') ? `https://${host}${imageUrl}` : `http://${host}${imageUrl}`;\r\n    }\r\n    return (\r\n        <StyledPostOverview href={url}>\r\n            <StyledImage src={imageUrl} alt={title} />\r\n            <h2>{title}</h2>\r\n        </StyledPostOverview>\r\n    )\r\n}\r\n\r\nconst sample = [\r\n    {title: \"\", image: \" \", url: \"\"},\r\n    {title: \"\", image: \" \", url: \"\"},\r\n]\r\nfunction PopularsPost(props) {\r\n    const [posts, setPosts] = React.useState(sample);\r\n    const postsContainer = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        const observer = createObserver((entry) => {\r\n            if (!entry.isIntersecting) return;\r\n            fetch(`${process.env.PUBLIC_URL}/data/posts.json`)\r\n                .then(res => res.json())\r\n                .then(urls => getPopularPosts(urls)\r\n                    .then(posts => setPosts(posts)))\r\n            observer.unobserve(entry.target);\r\n        });\r\n        observer.observe(postsContainer.current);\r\n    }, [props.container]);\r\n    return (\r\n        <StyledPopularPosts ref={postsContainer}>\r\n            <h1>Blogs</h1>\r\n            <StyledPosts>\r\n                {posts.map((post, index) => (\r\n                    <PostOverview key={index} {...post} />\r\n                ))}\r\n            </StyledPosts>\r\n        </StyledPopularPosts>\r\n    );\r\n}\r\n\r\nexport default PopularsPost;","import styled from \"styled-components\";\r\nimport LazyImage from \"./LazyImage\";\r\n\r\nconst StyledTechStack = styled.div`\r\n    display: flex;\r\n    gap: 0.5rem;\r\n    padding: 0 2rem;\r\n    flex-wrap: wrap;\r\n    margin-top: 2rem;\r\n    width: 100%;\r\n\r\n    & > h1 {\r\n        font-size: 1.5rem;\r\n        font-weight: bold;\r\n        font-family: var(--headerFont);\r\n    }\r\n\r\n    & > img {\r\n        object-fit: cover;\r\n        min-height: 28px;\r\n        background-color: var(--primary);\r\n        transition: transform 0.2s ease-in-out;\r\n        :hover {\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n`;\r\n\r\nfunction TechStack(props) {\r\n    return (\r\n        <StyledTechStack>\r\n            <h1>TechStack :</h1>\r\n            <LazyImage src=\"https://img.shields.io/badge/c-%2300599C.svg?style=for-the-badge&amp;logo=c&amp;logoColor=white\" alt=\"C\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/c%23-%23239120.svg?style=for-the-badge&amp;logo=c-sharp&amp;logoColor=white\" alt=\"C#\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/c++-%2300599C.svg?style=for-the-badge&amp;logo=c%2B%2B&amp;logoColor=white\" alt=\"C++\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/ruby-%23CC342D.svg?style=for-the-badge&amp;logo=ruby&amp;logoColor=white\" alt=\"Ruby\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/python-3670A0?style=for-the-badge&amp;logo=python&amp;logoColor=ffdd54\" alt=\"Python\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/markdown-%23000000.svg?style=for-the-badge&amp;logo=markdown&amp;logoColor=white\" alt=\"Markdown\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&amp;logo=java&amp;logoColor=white\" alt=\"Java\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/javascript-%23323330.svg?style=for-the-badge&amp;logo=javascript&amp;logoColor=%23F7DF1E\" alt=\"JavaScript\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/html5-%23E34F26.svg?style=for-the-badge&amp;logo=html5&amp;logoColor=white\" alt=\"HTML5\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/css3-%231572B6.svg?style=for-the-badge&amp;logo=css3&amp;logoColor=white\" alt=\"CSS3\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/azure-%230072C6.svg?style=for-the-badge&amp;logo=azure-devops&amp;logoColor=white\" alt=\"Azure\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/Cloudflare-F38020?style=for-the-badge&amp;logo=Cloudflare&amp;logoColor=white\" alt=\"Cloudflare\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/firebase-%23039BE5.svg?style=for-the-badge&amp;logo=firebase\" alt=\"Firebase\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/glitch-%233333FF.svg?style=for-the-badge&amp;logo=glitch&amp;logoColor=white\" alt=\"Glitch\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/.NET-5C2D91?style=for-the-badge&amp;logo=.net&amp;logoColor=white\" alt=\".Net\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/django-%23092E20.svg?style=for-the-badge&amp;logo=django&amp;logoColor=white\" alt=\"Django\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/DJANGO-REST-ff1709?style=for-the-badge&amp;logo=django&amp;logoColor=white&amp;color=ff1709&amp;labelColor=gray\" alt=\"DjangoREST\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/Electron-191970?style=for-the-badge&amp;logo=Electron&amp;logoColor=white\" alt=\"Electron.js\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/FastAPI-005571?style=for-the-badge&amp;logo=fastapi\" alt=\"FastAPI\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/NPM-%23000000.svg?style=for-the-badge&amp;logo=npm&amp;logoColor=white\" alt=\"NPM\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/jquery-%230769AD.svg?style=for-the-badge&amp;logo=jquery&amp;logoColor=white\" alt=\"jQuery\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&amp;logo=node.js&amp;logoColor=white\" alt=\"NodeJS\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/opencv-%23white.svg?style=for-the-badge&amp;logo=opencv&amp;logoColor=white\" alt=\"OpenCV\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/p5.js-ED225D?style=for-the-badge&amp;logo=p5.js&amp;logoColor=FFFFFF\" alt=\"p5js\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/less-2B4C80?style=for-the-badge&amp;logo=less&amp;logoColor=white\" alt=\"Less\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/react-%2320232a.svg?style=for-the-badge&amp;logo=react&amp;logoColor=%2361DAFB\" alt=\"React\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/React_Router-CA4245?style=for-the-badge&amp;logo=react-router&amp;logoColor=white\" alt=\"React Router\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/SASS-hotpink.svg?style=for-the-badge&amp;logo=SASS&amp;logoColor=white\" alt=\"SASS\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/Socket.io-black?style=for-the-badge&amp;logo=socket.io&amp;badgeColor=010101\" alt=\"Socket.io\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/spring-%236DB33F.svg?style=for-the-badge&amp;logo=spring&amp;logoColor=white\" alt=\"Spring\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/styled--components-DB7093?style=for-the-badge&amp;logo=styled-components&amp;logoColor=white\" alt=\"Styled Components\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/webpack-%238DD6F9.svg?style=for-the-badge&amp;logo=webpack&amp;logoColor=black\" alt=\"Webpack\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/threejs-black?style=for-the-badge&amp;logo=three.js&amp;logoColor=white\" alt=\"Threejs\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/nginx-%23009639.svg?style=for-the-badge&amp;logo=nginx&amp;logoColor=white\" alt=\"Nginx\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/Microsoft%20SQL%20Sever-CC2927?style=for-the-badge&amp;logo=microsoft%20sql%20server&amp;logoColor=white\" alt=\"MicrosoftSQLServer\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/mysql-%2300f.svg?style=for-the-badge&amp;logo=mysql&amp;logoColor=white\" alt=\"MySQL\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/sqlite-%2307405e.svg?style=for-the-badge&amp;logo=sqlite&amp;logoColor=white\" alt=\"SQLite\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/-Arduino-00979D?style=for-the-badge&amp;logo=Arduino&amp;logoColor=white\" alt=\"Arduino\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/Postman-FF6C37?style=for-the-badge&amp;logo=postman&amp;logoColor=white\" alt=\"Postman\" />\r\n            <LazyImage src=\"https://img.shields.io/badge/ESLint-4B3263?style=for-the-badge&amp;logo=eslint&amp;logoColor=white\" alt=\"ESLint\" />\r\n        </StyledTechStack>\r\n    )\r\n}\r\n\r\nexport default TechStack;","// more info: https://allorigins.win/\r\nconst CORS_API_HOST = 'https://api.allorigins.win/get?url=';\r\n\r\nasync function getMeta(url) {\r\n    return fetch(`${CORS_API_HOST}${encodeURIComponent(url)}`)\r\n        .then(response => response.ok ? response.json() : Promise.reject(response))\r\n        .then(data => data.contents)\r\n        .then(body => {\r\n            const parser = new DOMParser();\r\n            const doc = parser.parseFromString(body, 'text/html');\r\n            const meta = doc.querySelector('meta[name=\"description\"]');\r\n            const title = doc.querySelector('title');\r\n            const image = doc.querySelector('meta[property=\"og:image\"]');\r\n            const description = meta ? meta.getAttribute('content') : '';\r\n            const titleText = title ? title.textContent : '';\r\n            const imageUrl = image ? image.getAttribute('content') : '';\r\n            const metaData = {\r\n                title: titleText,\r\n                description: description,\r\n                image: imageUrl\r\n            };\r\n            return metaData;\r\n        })\r\n        .catch(console.error);\r\n}\r\n\r\nexport { getMeta };","import { getMeta } from './SEO';\r\n\r\nasync function getWorks(works) {\r\n    try {\r\n        const metaData = await Promise.all(works.map(work => getMeta(work.url)));\r\n        return metaData.map((meta, index) => ({\r\n            ...works[index],\r\n            ...meta,\r\n        }));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function getPopularPosts(postsUrl) {\r\n    try {\r\n        const metaData = await Promise.all(postsUrl.map(url => getMeta(url)));\r\n        return metaData.map((meta, index) => ({\r\n            url: postsUrl[index],\r\n            ...meta\r\n        }));\r\n    } catch (message) {\r\n        return console.error(message);\r\n    }\r\n}\r\n\r\nexport { getWorks, getPopularPosts };","const INTERSECTION_OBSERVER_SUPPORTED = (\"IntersectionObserver\" in window);\r\nfunction createObserver(callback, options) {\r\n    if (!INTERSECTION_OBSERVER_SUPPORTED) return null;\r\n    return new IntersectionObserver(entries => {\r\n        entries.forEach(entry => {\r\n            callback(entry);\r\n        })\r\n    }, options);\r\n}\r\n\r\nexport default createObserver;"],"names":["StyledCrossLink","styled","props","color","cursorEl","useStore","state","cursorRef","onMouseEnter","current","setAttribute","onMouseLeave","removeAttribute","className","href","children","StyledQuote","RandomQuote","React","quote","setQuote","author","setAuthor","fetch","then","res","json","data","en","catch","console","error","StyledRandomMeme","StyledImage","LazyImage","StyledRedirect","StyledAuthor","StyledTitle","sample","postLink","subreddit","title","url","iconStyles","fontSize","backgroundColor","padding","borderRadius","marginLeft","meme","setMeme","src","alt","IonIcon","icon","StyledLink","CrossLink","StyledIntrodution","imgObserver","createObserver","entry","isIntersecting","target","dataset","img","imgDOM","observe","unobserve","ref","StyledPopularPosts","StyledPosts","StyledPostOverview","PostOverview","image","host","split","imageUrl","includes","posts","setPosts","postsContainer","observer","process","urls","getPopularPosts","container","map","post","index","StyledTechStack","CORS_API_HOST","getMeta","encodeURIComponent","response","ok","Promise","reject","contents","body","doc","DOMParser","parseFromString","meta","querySelector","description","getAttribute","textContent","getWorks","works","all","work","metaData","log","postsUrl","INTERSECTION_OBSERVER_SUPPORTED","window","callback","options","IntersectionObserver","entries","forEach"],"sourceRoot":""}